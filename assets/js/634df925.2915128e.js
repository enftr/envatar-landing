"use strict";(self.webpackChunkenvatar_enftr_io=self.webpackChunkenvatar_enftr_io||[]).push([[587],{3905:(e,t,a)=>{a.d(t,{Zo:()=>d,kt:()=>c});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function o(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var l=n.createContext({}),p=function(e){var t=n.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):o(o({},t),e)),a},d=function(e){var t=p(e.components);return n.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},m=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),m=p(a),c=r,g=m["".concat(l,".").concat(c)]||m[c]||u[c]||i;return a?n.createElement(g,o(o({ref:t},d),{},{components:a})):n.createElement(g,o({ref:t},d))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,o=new Array(i);o[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=a[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,a)}m.displayName="MDXCreateElement"},798:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>p});var n=a(7462),r=(a(7294),a(3905));const i={id:"intro",title:"Overview",description:"How to use the identity pipeline to allow users to link and provide their avatars with your platform."},o="Identity Pipeline",s={unversionedId:"providers/pipeline/intro",id:"providers/pipeline/intro",title:"Overview",description:"How to use the identity pipeline to allow users to link and provide their avatars with your platform.",source:"@site/docs/providers/pipeline/intro.md",sourceDirName:"providers/pipeline",slug:"/providers/pipeline/intro",permalink:"envatar-landing/docs/providers/pipeline/intro",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/providers/pipeline/intro.md",tags:[],version:"current",frontMatter:{id:"intro",title:"Overview",description:"How to use the identity pipeline to allow users to link and provide their avatars with your platform."},sidebar:"providerSidebar",previous:{title:"2. Basic Configuration",permalink:"envatar-landing/docs/providers/basic"},next:{title:"Overview",permalink:"envatar-landing/docs/providers/pipeline/intro"}},l={},p=[{value:"Stage-based Aggregation",id:"stage-based-aggregation",level:2},{value:"Example Flow",id:"example-flow",level:2},{value:"Available Stages",id:"available-stages",level:2},{value:"Returning the Result",id:"returning-the-result",level:2},{value:"CryptoAvatars Example",id:"cryptoavatars-example",level:2},{value:"Result",id:"result",level:3}],d={toc:p};function u(e){let{components:t,...a}=e;return(0,r.kt)("wrapper",(0,n.Z)({},d,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"identity-pipeline"},"Identity Pipeline"),(0,r.kt)("p",null,"The identity pipeline describes how users link their avatars from your platform."),(0,r.kt)("div",{className:"admonition admonition-tip alert alert--success"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Pipeline creation is quick and painless. Most pipelines are under 20 lines of code \ud83d\ude0d"))),(0,r.kt)("h2",{id:"stage-based-aggregation"},"Stage-based Aggregation"),(0,r.kt)("p",null,"We make it easy for you to create your integration by configuring your data acquisition and transformations in simple-to-use, prebuilt stages. Each stage accepts an ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"aggregate"))," from the previous stage and performs some operation on that before passing it to the next stage."),(0,r.kt)("h2",{id:"example-flow"},"Example Flow"),(0,r.kt)("img",{src:"/illustrations/pipeline.svg",alt:"Pipeline.svg",style:{margin:"0 auto",width:"100%","max-width":"1000px"}}),(0,r.kt)("h2",{id:"available-stages"},"Available Stages"),(0,r.kt)("p",null,"We've created several stages to help you easily create your integration."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./web3"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"web3")," stage"))," - perform web3 operations like requesting signed messages or a user's address"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./iframe"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"iframe")," stage"))," - Load and communicate with an external page"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./oauth"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"oauth")," stage"))," - Use a standard OAuth 2.0 redirect flow"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./select"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"select"))," stage")," - Display a list of avatars for the user to select from"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./transform"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"transform"))," stage")," - Perform arbitrary operations in the background"),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("a",{parentName:"li",href:"./custom"},(0,r.kt)("strong",{parentName:"a"},(0,r.kt)("inlineCode",{parentName:"strong"},"custom"))," stage")," - Use a custom Vue component for total control of the pipeline")),(0,r.kt)("h2",{id:"returning-the-result"},"Returning the Result"),(0,r.kt)("p",null,"Your final stage ",(0,r.kt)("strong",{parentName:"p"},"must")," return data in the following format:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-json"},'{\n  "avatar": {\n    "uri": "https://exampleavatars.com/my-avatar.vrm", // The URI to a downloadable avatar\n    "format": "glb" | "fbx" | "vrm" | ..., // The file format\n    "type": "humanoid" | null // A generic animation type for your avatar (if applicable)\n  },\n  "metadata": {\n    // Add attributes needed for your Game engine integration(s)\n    ...,\n  }\n}\n')),(0,r.kt)("h2",{id:"cryptoavatars-example"},"CryptoAvatars Example"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-javascript",metastring:'title="/providers/CryptoAvatars/index.js"',title:'"/providers/CryptoAvatars/index.js"'},"export default {\n  ...,\n  // This is the experience configuration object for CryptoAvatars (used in STEP 2)\n  config: {\n    apiKey: { required: true, type: String },\n  },\n  pipeline: [\n    /**\n     * STEP 1\n     * \n     * Request the user's ethereum address\n     */\n    {\n      // Format the `aggregate` to an individual address rather than array\n      format(result) {\n        const [address] = result\n        return address\n      },\n      method: 'eth_requestAccounts',\n      type: 'web3',\n    },\n    \n    /**\n     * STEP 2\n     * \n     * Call the CryptoAvatars API asking for a list of the avatars for the ethereum address provided\n     */\n    {\n      async transform() {\n        const { data } = await this.$axios.get(\n          `https://api.cryptoavatars.io/nfts/avatars/${this.aggregate}?skip=0&limit=20`,\n          {\n            headers: {\n              'API-KEY': this.config.apiKey, // This is provided in the experience's AvatarConnect configuration\n              accept: 'application/json',\n            },\n          }\n        )\n        return data\n      },\n      type: 'transform',\n    },\n\n    /**\n     * STEP 3\n     * \n     * Present a list of avatars for the user to select from\n     */\n    {\n      // RETURN THE RESULT\n      format({ metadata: { asset } }) {\n        return { avatar: { format: 'vrm', type: 'humanoid', uri: asset } }\n      },\n      // Given a list-item, return its image\n      image({ metadata: { image } }) {\n        return image\n      },\n      // Given a list-item, return its title\n      name({ metadata: { name } }) {\n        return name\n      },\n      type: 'select',\n    },\n  ],\n}\n")),(0,r.kt)("h3",{id:"result"},"Result"),(0,r.kt)("img",{src:"/demos/crypto-avatars.gif",alt:"Pipeline Demo",style:{margin:"0 auto",width:"100%","max-width":"800px"}}))}u.isMDXComponent=!0}}]);